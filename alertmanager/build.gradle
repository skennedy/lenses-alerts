buildscript {
    repositories {
        jcenter()
        mavenCentral()
        maven {
            url 'https://plugins.gradle.org/m2/'
        }
    }
    dependencies {
        classpath 'com.github.maiflai:gradle-scalatest:0.24'
    }
}

allprojects {

    apply plugin: 'scala'
    apply plugin: 'java'
    apply plugin: 'com.github.maiflai.scalatest'

    group = 'io.lenses'
    description = "The Prometheus AlertManager integration for Lenses alerts."

    version = "1.0.0"
    
    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    ext {
        scalaMajorVersion           = '2.12'
        scala                       = '2.12.7'
        
        lensesAlertsVersion         = "5.0.0"
        scalaTest                   = '3.0.5'
        slf4jVersion                = "1.7.7"

        httpClient                  = "4.5.6"

        akkaVersion                 = "2.5.18"
        akkaHttpVersion             = "10.1.5"
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "http://repo.typesafe.com/typesafe/releases/" }
    }


    dependencies {
        implementation "org.scala-lang:scala-library:$scala"
        implementation 'org.slf4j:slf4j-api:1.7.25'
        implementation 'com.sksamuel.exts:exts_2.12:1.60.0'

        implementation "org.apache.httpcomponents:httpclient:$httpClient"

        implementation "io.lenses:lenses-alerts-java:$lensesAlertsVersion"
        implementation "io.lenses:lenses-alerts-scala_$scalaMajorVersion:$lensesAlertsVersion"

        implementation "io.circe:circe-generic_$scalaMajorVersion:0.11.1"
        implementation "io.circe:circe-parser_$scalaMajorVersion:0.11.1"
        implementation "io.circe:circe-generic-extras_$scalaMajorVersion:0.11.1"
                
        testCompile 'ch.qos.logback:logback-classic:1.2.3'
        testCompile "org.scalatest:scalatest_$scalaMajorVersion:$scalaTest"
        testCompile 'org.pegdown:pegdown:1.6.0'
        testCompile "com.github.tomakehurst:wiremock:2.23.2"
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task scaladocJar(type: Jar) {
        classifier = 'scaladoc'
        from '../LICENSE'
        from scaladoc
    }

    tasks.withType(Tar) {
        compression Compression.GZIP
        extension = 'tgz'
    }
    

    task collectJars(type: Copy) {
        into "${buildDir}/libs"
        from {
            configurations.runtime.filter( { (it.name =~ /jslack.*\.jar/ )})
        }
    }

    task compile(dependsOn: 'compileScala')

    artifacts {
        archives jar
    }

    javadoc.dependsOn scaladoc
}
